/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package repeated_word;

import org.junit.Test;
import static org.junit.Assert.*;
import static repeated_word.RepeatedWord.repeated_word;

public class RepeatedWordTest {

    @Test (expected = IllegalArgumentException.class)
    public void emptyInput() {
        repeated_word("");
    }

    @Test
    public void endsWithPunctuation() {
        String dog = "The dog is happy to see another dog?";
        assertEquals(
                "Even if dog ends with period, should return 'dog'",
                "dog",
                repeated_word(dog));
    }

    @Test
    public void noDuplicate() {
        assertNull(
                "The input paramter does not contain duplicate, should return null",
                repeated_word("blah hello yikes yum yappy"));
    }

    @Test
    public void summer() {
        String summer = "It was a queer, sultry summer, " +
                "the summer they electrocuted the Rosenbergs, " +
                "and I didn’t know what I was doing in New York...";
        assertEquals(
                "Should return summer",
                "summer",
                repeated_word(summer));
    }

    @Test
    public void it() {
        String it = "It was the best of times, it was the worst of times, " +
                "it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, " +
                "it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, " +
                "it was the spring of hope, it was the winter of despair, we had everything before us, " +
                "we had nothing before us, we were all going direct to Heaven, we were all going direct the other way" +
                " – in short, the period was so far like the present period, " +
                "that some of its noisiest authorities insisted on its being received, for good or for evil, " +
                "in the superlative degree of comparison only...";
        assertEquals(
                "Should return 'it'",
                "it",
                repeated_word(it)
        );
    }

    @Test
    public void a() {
        String a = "Once upon a time, there was a brave princess who...";
        assertEquals(
                "Should return 'a'",
                "a",
                repeated_word(a)
        );
    }
}
