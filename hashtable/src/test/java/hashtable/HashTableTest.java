/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashtable;

import org.junit.Test;
import static org.junit.Assert.*;

public class HashTableTest {
    HashTable<String, String> demo;
    HashTable<Integer, String> num;

    @Test
    public void init() {
        demo = new HashTable<>();
        demo.add("hello", "world");
        demo.add("yikes", "yum");
        demo.add("yup", "world!!!");
        demo.add("bye", "yup");
        demo.add("hm", "wallow");
        demo.add("tee", "hee");
        demo.add("jen", "ok");
        demo.add("reset!", "boo");
        demo.add("hullaboo", "yikes");
        demo.add("hut", "poo");
        demo.add("hush", "hee");
        demo.add("hush", "revised");
        demo.print();
    }

    @Test
    public void initNum() {
        num = new HashTable<>();
        num.add(11, "hi");
        num.add(2000, "yes");
        num.add(99, "no");
        num.add(43, "hi");
        num.add(44, "hi");
        num.add(45, "hi");
        num.add(46, "hi");
        num.add(47, "hi");
    }

    @Test (expected = IllegalArgumentException.class)
    public void nullInput() {
        HashTable<Integer, Integer> classUnderTest = new HashTable<>();
        classUnderTest.add(null, 0);
        classUnderTest.add(0, null);
        classUnderTest.contains(9);
        classUnderTest.delete(null);
    }

    @Test
    public void objectExistsAndDelete() {
        init();
        assertTrue("table contains key : jen should return true", demo.contains("jen"));
        demo.delete("jen");
        assertFalse("table deleted jen, contains should return false", demo.contains("jen"));

        initNum();
        assertTrue("table contains key : 44 should return true", num.contains(44));
        num.delete(44);
        assertFalse("table deleted jen, contains should return false", num.contains(44));
    }

    @Test
    public void size() {
        init();
        assertEquals("Size of demo should be 11", 11, demo.getSize());

        initNum();
        assertEquals("Size of num should be 8", 8, num.getSize());
    }

    @Test
    public void get() {
        init();
        assertEquals("get on 'reset!' should return boo", "boo", demo.get("reset!"));
        assertNull("get on 'reset' should return null", demo.get("reset"));

        initNum();
        assertEquals("get on 44 should return hi", "hi", num.get(44));
    }
}
